{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["ConnectionFactory","HttpService","Negociacao","NegociacaoDao","NegociacaoService","_http","getConnection","then","connection","dao","apagaTodos","catch","console","log","erro","Error","negociacao","conexao","adiciona","listaAtual","obterNegociacoes","negociacoes","filter","some","equals","negociacaoExistente","listaTodos","get","map","Date","objeto","data","quantidade","valor","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {ConnectionFactory} from './ConnectionFactory';\nimport {HttpService} from './HttpService';\nimport {Negociacao} from '../models/Negociacao';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\n\nexport class NegociacaoService {\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    apaga() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível apagar as negociações')\n            });\n    }\n\n    cadastra(negociacao) {\n        return ConnectionFactory\n            .getConnection()\n            .then(conexao => new NegociacaoDao(conexao))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação cadastrada com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(\"Não foi possível adicionar a negociação\")\n            });\n    }\n\n    importa(listaAtual) {\n        return this.obterNegociacoes()\n            .then(negociacoes =>\n                negociacoes.filter(negociacao =>\n                    !listaAtual.some(negociacaoExistente =>\n                        negociacao.equals(negociacaoExistente)))\n            )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(\"Não foi possível importar as negociações\");\n            });\n    }\n\n    lista() {\n        return ConnectionFactory\n            .getConnection()\n            .then(conexao => new NegociacaoDao(conexao))\n            .then(dao => dao.listaTodos())\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(\"Não foi possível adicionar a negociação\");\n            });\n    }\n\n    obterNegociacoesDaSemana() {\n        return this._http\n            .get('negociacoes/semana')\n            .then(negociacoes => {\n                console.log(negociacoes);\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana');\n            });\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n        return this._http\n            .get('negociacoes/anterior')\n            .then(negociacoes => {\n                console.log(negociacoes);\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana anterior');\n            });\n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n        return this._http\n            .get('negociacoes/retrasada')\n            .then(negociacoes => {\n                console.log(negociacoes);\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\n            });\n\n    }\n\n    obterNegociacoes() {\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]).then(periodos => {\n            let negociacoes = periodos\n                .reduce((dados, periodo) => dados.concat(periodo), []);\n\n            return negociacoes;\n        }).catch(erro => {\n            throw new Error(erro);\n        });\n\n    }\n}"]}